<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lan5th.blog.dao.CommentMapper">
    <update id="update" parameterType="com.lan5th.blog.pojo.Comment">
        update lz_blog.comment set blog_id = #{blog_id}, content = #{content}, user_id = #{userId} where id = #{id} and deleted = 0;
    </update>

    <insert id="save" parameterType="com.lan5th.blog.pojo.Comment">
        insert into lz_blog.comment(id, blog_id, content, user_id, reply_to) VALUES (#{id}, #{blogId}, #{content}, #{userId}, #{replyTo});
    </insert>

    <update id="deleteByIds" parameterType="list">
        update lz_blog.comment set deleted = 1 where id in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="getPagination" resultType="com.lan5th.blog.pojo.Comment">
        select s1.*, u2.name replyToUserName from
        (select c.id, c.blog_id, c.content, c.create_time, c.deleted, c.user_id, u1.name userName, u1.avatar_url userAvatar, c.reply_to
        from lz_blog.comment c, lz_blog.user_info u1, lz_blog.user_info u2 where c.user_id = u1.id and c.id in
        (select c3.id from (select c2.id from lz_blog.comment as c2
        <where>
            <choose>
                <when test="blogId != null">
                    c2.blog_id = #{blogId}
                </when>
                <otherwise>
                    c2.blog_id != -1
                </otherwise>
            </choose>
            and c2.deleted = 0
        </where>
        order by c2.create_time limit #{preNum}, #{postNum}) as c3)) s1
        left join lz_blog.user_info u2 on s1.reply_to = u2.id
        order by s1.create_time;
    </select>

    <select id="getCommentCount" resultType="integer">
        select COUNT(1) from lz_blog.comment
        <where>
            <choose>
                <when test="blogId != null">
                    blog_id = #{blogId}
                </when>
                <otherwise>
                    blog_id != -1
                </otherwise>
            </choose>
            and deleted = 0;
        </where>
    </select>

    <select id="getSingleComment" resultType="com.lan5th.blog.pojo.Comment">
        select s1.*, u2.name replyToUserName from (select c.id, c.blog_id, c.content, c.create_time, c.deleted, c.user_id, u1.name userName, u1.avatar_url userAvatar, c.reply_to
        from lz_blog.comment c, lz_blog.user_info u1, lz_blog.user_info u2 where c.user_id = u1.id and c.id = #{id}) s1
        left join lz_blog.user_info u2 on s1.reply_to = u2.id
    </select>
</mapper>
